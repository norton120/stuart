[tool.poetry]
name = "stuart"
version = "0.1.0"
description = "stuart acts as an autonomous agent to drive code generation."
authors = ["Ethan Knox <ethan@pirate.baby>"]

[tool.poetry.dependencies]
python = "~=3.13"
sqlalchemy = "~=2.0.37"
click = "~=8.1"
requests = "^2.31.0"
pydantic = "^2.6.1"
promptic = "^5.4.0"
langfuse = "^2.57.13"
treelib = "^1.7.0"
pydantic_settings = "^2.8.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
factory-boy = "^3.3.0"
pytest-cov = "^4.1.0"
black = "^24.1.1"
ruff = "^0.1.14"
mypy = "^1.8.0"
vcrpy = "^4.2.1"

[tool.poetry.scripts]
stuart = "stuart.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "--cov=stuart --cov-report=term-missing"

[tool.logging]
version = 1
disable_existing_loggers = false

[tool.logging.formatters.default]
format = "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

[tool.logging.handlers.console]
class = "logging.StreamHandler"
formatter = "default"
level = "INFO"

[tool.logging.root]
level = "INFO"
handlers = ["console"]

[tool.black]
line-length = 100
target-version = ["py313"]
include = '\.pyi?$'

[tool.ruff]
line-length = 100
select = ["E", "F", "I", "B", "W", "C", "D"]
ignore = ["D203", "D212"]
exclude = [".git", "__pycache__", "build", "dist"]

[tool.ruff.per-file-ignores]
"tests/*" = ["D"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true